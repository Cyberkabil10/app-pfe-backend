apiVersion: apps/v1
kind: Deployment
metadata:
  name: springboot-k8s-auth-deployment
  namespace: pfe
  labels:
    app: pfeapp
    tier: backend
spec:
  selector:
    matchLabels:
      app: springboot-k8s-backend-auth
  replicas: 1
  template:
    metadata:
      labels:
        app: springboot-k8s-backend-auth
    spec:
      containers:
        - name: springboot-k8s-backend-auth
          image: 683929775058.dkr.ecr.eu-west-3.amazonaws.com/backendauth-repo:v1.0-165
          ports:
            - containerPort: 9100
              protocol: TCP
          env:   # Setting Enviornmental Variables
          - name: MYSQL_HOST  # Setting Database host from Secret
            valueFrom:
              secretKeyRef:
                name: backend-secret # Secret Name
                key: MYSQL_HOST
          - name: MYSQL_ROOT_PASSWORD # Setting Database password from Secret
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: MYSQL_ROOT_PASSWORD
          - name: MYSQL_USER # Setting Database user from Secret
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: MYSQL_USER
          - name: MYSQL_DATABASE # Setting Database name from Secret
            valueFrom:
              secretKeyRef:
                name: backend-secret
                key: MYSQL_DATABASE
          volumeMounts:
          - name: config
            mountPath: "/config/application.properties"
            subPath: "application.properties"
            #readOnly: true
      volumes:
  # You set volumes at the Pod level, then mount them into containers inside that Pod
      - name: config
        configMap:
      # Provide the name of the ConfigMap you want to mount.
          name: backend-auth-config
      # An array of keys from the ConfigMap to create as files
          items:
          - key: "application.properties"
            path: "application.properties"